version: "3.6"

services:
  postgres_database:
    container_name: postgres_database
    image: postgres:15.4
    restart: always
    ports:
      - "5435:5432"
    volumes:
#      - ./tsl_crl_downloader/SQL/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - database_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname=crldatabase --username=postgres" ]  # TODO
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - tsl_manager_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    env_file:
      - .env
    depends_on:
      postgres_database:
        condition: service_healthy
    networks:
      - tsl_manager_network

  tsl_manager_project:
    container_name: tsl_manager_project
    build: ./tsl_manager_project
    restart: always
    ports:
      - "9000:8000"
    volumes:
      - tsl_files:/code/tsl_manager_downloader
      - static:/code/static
      - media:/code/media
    depends_on:
      postgres_database:
        condition: service_healthy
    networks:
      - tsl_manager_network

  tsl_manager_downloader:
    container_name: tsl_manager_downloader
    build: ./tsl_manager_downloader
    restart: always
    volumes:
      - ${LOG_DIRECTORY}:/app/logs
      - tsl_files:/app/tsl_downloads
    env_file:
      - .env
    depends_on:
      postgres_database:
        condition: service_healthy
    networks:
      - tsl_manager_network

  tsl_manager_nginx:
    container_name: tsl_manager_nginx
    build: ./tsl_manager_nginx
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - static:/static
      - media:/media
    depends_on:
      - tsl_manager_project
    networks:
      - tsl_manager_network

networks:
  tsl_manager_network:
    name: tsl_manager_network
    driver: bridge

volumes:
  static:
    name: static_volume
  media:
    name: media_volume
#  tsl_files:
#    name: tsl_files_volume
  database_data:
    name: database_data
  pgadmin_data:
    name: pgadmin_data
